name: cont-ci-50


on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      env:
        description: 'Select a env'
        required: true
        type: choice
        options:
          - DEV
          - PRD

jobs:
  build:
    runs-on: ubuntu-latest   # Github-hosted
    # runs-on: self-hosted           # VM
    # runs-on: edu00-arc-runner-set  # AKS

    env:
      IMAGE_NAME: ${{ vars.ACR_NAME }}.azurecr.io/${{ vars.USERID }}/samplejava

    permissions:
      contents: write
      # packages: write
      # id-token: write

    steps:
      - name: Set IMAGE_NAME based on environment
        id: set_image_name
        run: |
          if [[ "${{ github.event.inputs.env }}" == "DEV" ]]; then
            TIMESTAMP=$(date -u +"%Y%m%d%H%M%S" --date="9 hours")
            # TIMESTAMP=$(TZ="Asia/Seoul" date +"%Y%m%d%H%M%S")
            echo "IMAGE_TAG=v$TIMESTAMP" >> $GITHUB_ENV
            echo "KUSTOMIZATION_FILE=manifests/overlays/dev/kustomization.yaml" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=v2.1.${{ github.run_number }}" >> $GITHUB_ENV
            echo "KUSTOMIZATION_FILE=manifests/overlays/prd/kustomization.yaml" >> $GITHUB_ENV
          fi
          
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ vars.ACR_NAME }}.azurecr.io
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ vars.ACR_NAME }}.azurecr.io/${{ vars.USERID }}/samplejava

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:cache
          cache-to:   type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max
          

      - name: Update kustomization.yaml with newTag
        run: |
          sed -i "s/newTag: .*/newTag: ${{ env.IMAGE_TAG }}/" $KUSTOMIZATION_FILE

      - name: Commit and push updated kustomization.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add $KUSTOMIZATION_FILE
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }} in kustomization.yaml"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
